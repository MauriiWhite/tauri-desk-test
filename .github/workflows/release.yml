name: CI/CD & Release Workflow

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    name: Build & Package
    runs-on: windows-latest

    strategy:
      fail-fast: false

    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js v22.17.1
        uses: actions/setup-node@v3
        with:
          node-version: "22.17.1"

      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.2.18

      - name: Add Signtool to PATH
        shell: pwsh
        run: |
          $signtoolPath = 'C:\Program Files (x86)\Windows Kits\10\bin\10.0.19041.0\x64'
          Write-Host "Using Signtool path: $signtoolPath"
          "##[add-path]$signtoolPath" | Out-File -FilePath $Env:GITHUB_PATH -Encoding utf8 -Append

      - name: Verify Signtool
        shell: pwsh
        run: |
          Get-Command signtool.exe

      - name: Install dependencies & build Tauri app
        shell: pwsh
        run: |
          bun install
          bun tauri build

      - name: Import Windows certificate
        shell: pwsh
        env:
          WINDOWS_CERTIFICATE: ${{ secrets.WINDOWS_CERTIFICATE }}
          WINDOWS_CERTIFICATE_PASSWORD: ${{ secrets.WINDOWS_CERTIFICATE_PASSWORD }}
        run: |
          New-Item -ItemType directory -Path certificate
          Set-Content -Path certificate/tempCert.txt -Value $env:WINDOWS_CERTIFICATE
          certutil -decode certificate/tempCert.txt certificate/certificate.pfx
          Remove-Item -Path certificate/tempCert.txt
          Import-PfxCertificate -FilePath certificate/certificate.pfx -CertStoreLocation Cert:\CurrentUser\My -Password (ConvertTo-SecureString -String $env:WINDOWS_CERTIFICATE_PASSWORD -Force -AsPlainText)

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: tauri-build
          path: src-tauri/target/release/bundle/nsis/*.exe

  release:
    name: Create GitHub Release
    needs: build
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - id: create_release
        name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          prerelease: ${{ contains(github.ref_name, '-rc') || contains(github.ref_name, '-beta') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  upload-artifacts:
    name: Upload Release Installer
    needs: release
    runs-on: windows-latest
    steps:
      - name: Upload installer EXE
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: src-tauri/target/release/bundle/nsis/tauri-desk-test_${{ github.ref_name }}_x64-setup.exe
          asset_name: tauri-desk-test_${{ github.ref_name }}_x64-setup.exe
          asset_content_type: application/vnd.microsoft.portable-executable
